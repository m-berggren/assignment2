Task 8 explanations
1. I was responsible for doing task 4, so at the beginning before the new task I created an external file to store the Enums for each pokemon type. Also, I decided to use the nested switch-case model in the main file of the task. The outer switch was implemented to switch the types of attacking pokemon, the return was made to describe the damage multiplier for the “NORMAL” type attacking pokemon.  The inner switch was used to describe the results of the attack depending on the type of defending pokemon. In the return values of inner switch case, I created the damage multipliers depending on the defender’s type, the default multiplier, which was equal to 1, stands for standard damage with no special effects of the attack.
2. When the new design task came out, I created more Enums for each of the 4 new types (Bug, Ice, Dragon and Electric). In the main file, I created more return cases for new damage multipliers between different pokemon types depending on the table in the request description. The model I chose for this exercise was modifiable enough, so I did not need to implement major code changes. For outer switch case I added each of the new types and in the inner one I described each new multiplier for new attacks between all types. If there was no multiplier, I returned default which is equal to 1.
